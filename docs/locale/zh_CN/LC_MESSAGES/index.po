#
msgid ""
msgstr ""

msgid "Home"
msgstr "首页"

msgid "Example: Basic Sphinx project for Read the Docs"
msgstr "示例：基本的Sphinx项目用于Read the Docs"

msgid "文档状态"
msgstr "文档状态"

msgid ""
"This example shows a basic Sphinx project with Read the Docs. You're "
"encouraged to view it to get inspiration and copy & paste from the files in "
"the source code. If you are using Read the Docs for the first time, have a "
"look at the official `Read the Docs Tutorial "
"<https://docs.readthedocs.io/en/stable/tutorial/index.html>`__."
msgstr ""
"这个示例展示了一个基本的Sphinx项目和Read the Docs。我们鼓励您查看它以获得灵感并从源代码中的文件复制粘贴。如果您是第一次使用Read "
"the Docs，请参阅官方的 `Read the Docs 教程 "
"<https://docs.readthedocs.io/en/stable/tutorial/index.html>`__ 。"

msgid ""
"📚 `docs/ <https://github.com/readthedocs-examples/example-sphinx-"
"basic/blob/main/docs/>`_"
msgstr ""
"📚 `docs/ <https://github.com/readthedocs-examples/example-sphinx-"
"basic/blob/main/docs/>`_"

msgid ""
"A basic Sphinx project lives in ``docs/``. All the ``*.rst`` make up "
"sections in the documentation."
msgstr "一个基本的Sphinx项目位于 ``docs/`` 目录中。所有的 ``*.rst`` 文件构成了文档的部分。"

msgid ""
"⚙️ `.readthedocs.yaml <https://github.com/readthedocs-examples/example-"
"sphinx-basic/blob/main/.readthedocs.yaml>`_"
msgstr ""
"⚙️ `.readthedocs.yaml <https://github.com/readthedocs-examples/example-"
"sphinx-basic/blob/main/.readthedocs.yaml>`_"

msgid "Read the Docs Build configuration is stored in ``.readthedocs.yaml``."
msgstr "Read the Docs 构建配置存储在 ``.readthedocs.yaml`` 文件中。"

msgid ""
"⚙️ `docs/conf.py <https://github.com/readthedocs-examples/example-sphinx-"
"basic/blob/main/docs/conf.py>`_"
msgstr ""
"⚙️ `docs/conf.py <https://github.com/readthedocs-examples/example-sphinx-"
"basic/blob/main/docs/conf.py>`_"

msgid ""
"Both the configuration and the folder layout follow Sphinx default "
"conventions. You can change the `Sphinx configuration values "
"<https://www.sphinx-doc.org/en/master/usage/configuration.html>`_ in this "
"file"
msgstr ""
"配置和文件夹布局遵循Sphinx默认约定。你可以在本文件中更改 `Sphinx配置值 <https://www.sphinx-"
"doc.org/en/master/usage/configuration.html>`_ 。"

msgid ""
"📍 `docs/requirements.txt <https://github.com/readthedocs-examples/example-"
"sphinx-basic/blob/main/docs/requirements.txt>`_ and `docs/requirements.in "
"<https://github.com/readthedocs-examples/example-sphinx-"
"basic/blob/main/docs/requirements.in>`_"
msgstr ""
"📍 `docs/requirements.txt <https://github.com/readthedocs-examples/example-"
"sphinx-basic/blob/main/docs/requirements.txt>`_ 和 `docs/requirements.in "
"<https://github.com/readthedocs-examples/example-sphinx-"
"basic/blob/main/docs/requirements.in>`_"

msgid ""
"Python dependencies are `pinned "
"<https://docs.readthedocs.io/en/latest/guides/reproducible-builds.html>`_ "
"(uses `pip-tools <https://pip-tools.readthedocs.io/en/latest/>`_). Make sure"
" to add your Python dependencies to ``requirements.txt`` or if you choose "
"`pip-tools <https://pip-tools.readthedocs.io/en/latest/>`_, edit "
"``docs/requirements.in`` and remember to run ``pip-compile "
"docs/requirements.in``."
msgstr ""
"Python 依赖项是固定的（使用了 `pip-tools <https://pip-"
"tools.readthedocs.io/en/latest/>`_）。确保将你的 Python 依赖项添加到 ``requirements.txt``"
" 中，或者如果你选择使用 `pip-tools <https://pip-tools.readthedocs.io/en/latest/>`_，则编辑 "
"``docs/requirements.in`` 并记住运行 ``pip-compile docs/requirements.in``。"

msgid ""
"💡 `docs/api.rst <https://github.com/readthedocs-examples/example-sphinx-"
"basic/blob/main/docs/api.rst>`_"
msgstr ""
"💡 `docs/api.rst <https://github.com/readthedocs-examples/example-sphinx-"
"basic/blob/main/docs/api.rst>`_"

msgid ""
"By adding our example Python module ``lumache`` in the reStructuredText "
"directive ``:autosummary:``, Sphinx will automatically scan this module and "
"generate API docs."
msgstr ""
"通过在reStructuredText指令 ``:autosummary:`` 中添加我们的示例Python模块 ``lumache`` ，Sphinx会自动扫描该模块并生成API文档。"

msgid ""
"💡 `docs/usage.rst <https://github.com/readthedocs-examples/example-sphinx-"
"basic/blob/main/docs/usage.rst>`_"
msgstr ""
"💡 `docs/使用.rst <https://github.com/readthedocs-examples/example-sphinx-"
"basic/blob/main/docs/使用.rst>`_"

msgid ""
"Sphinx can automatically extract API documentation directly from Python "
"modules, using for instance the ``:autofunction:`` directive."
msgstr "Sphinx 可以自动从 Python 模块中提取 API 文档，例如使用 ``:autofunction:`` 指令。"

msgid ""
"💡 `lumache.py <https://github.com/readthedocs-examples/example-sphinx-"
"basic/blob/main/lumache.py>`_"
msgstr ""
"💡 `lumache.py <https://github.com/readthedocs-examples/example-sphinx-"
"basic/blob/main/lumache.py>`_"

msgid ""
"API docs are generated for this example Python module - they use "
"*docstrings* directly in the documentation, notice how this shows up in the "
"rendered documentation."
msgstr "API 文档为这个示例 Python 模块生成了 - 它们直接在文档中使用 *docstrings*，注意一下这如何出现在渲染后的文档中。"

msgid "🔢 Git tags versioning"
msgstr "🔢 Git 标签版本控制"

msgid ""
"We use a basic versioning mechanism by adding a git tag for every release of"
" the example project. All releases and their version numbers are visible on "
"`example-sphinx-basic.readthedocs.io <https://example-sphinx-"
"basic.readthedocs.io/en/latest/>`__."
msgstr ""
"我们通过在每个示例项目的发布中添加一个git标签来使用基本的版本控制机制。所有的发布及其版本号都可以在 `example-sphinx-"
"basic.readthedocs.io <https://example-sphinx-basic.readthedocs.io/en/latest/>`__ 上查看。"

msgid ""
"📜 `README.rst <https://github.com/readthedocs-examples/example-sphinx-"
"basic/blob/main/README.rst>`_"
msgstr ""
"📜 `README.rst <https://github.com/readthedocs-examples/example-sphinx-"
"basic/blob/main/README.rst>`_"

msgid ""
"Contents of this ``README.rst`` are visible on Github and included on `the "
"documentation index page <https://example-sphinx-"
"basic.readthedocs.io/en/latest/>`_ (Don't Repeat Yourself)."
msgstr ""
"本 ``README.rst`` 的内容在 GitHub 上可见，并包含在 `文档索引页面 <https://example-sphinx-"
"basic.readthedocs.io/en/latest/>`_ 中（不要重复自己）。"

msgid "⁉️ Questions / comments"
msgstr "❓ 问题/评论"

msgid ""
"If you have questions related to this example, feel free to can ask them as "
"a Github issue `here <https://github.com/readthedocs-examples/example-"
"sphinx-basic/issues>`_."
msgstr ""
"如果您有关于此示例的问题，请随时在 GitHub 问题中提出 `这里 <https://github.com/readthedocs-"
"examples/example-sphinx-basic/issues>`_。"

msgid "Example Project usage"
msgstr "示例项目使用方法"

msgid ""
"This project has a standard Sphinx layout which is built by Read the Docs "
"almost the same way that you would build it locally (on your own laptop!)."
msgstr "本项目采用标准的Sphinx布局，由Read the Docs几乎以与您本地构建（在自己的笔记本电脑上）相同的方式进行构建！"

msgid ""
"You can build and view this documentation project locally - we recommend "
"that you activate `a local Python virtual environment first "
"<https://packaging.python.org/en/latest/guides/installing-using-pip-and-"
"virtual-environments/#creating-a-virtual-environment>`_:"
msgstr ""
"你可以本地构建和查看此文档项目 - 我们推荐你在激活 `一个本地Python虚拟环境 "
"<https://packaging.python.org/en/latest/guides/installing-using-pip-and-"
"virtual-environments/#creating-a-virtual-environment>`_ 之前先进行："

msgid "You can also build the documentation locally with ``make``:"
msgstr "你也可以使用 ``make`` 在本地构建文档："

msgid "Using the example in your own project"
msgstr "使用你在项目中的示例"

msgid ""
"If you are new to Read the Docs, you may want to refer to the `Read the Docs"
" User documentation <https://docs.readthedocs.io/>`_."
msgstr ""
"如果你是Read the Docs的新手，你可能想要参考 `Read the Docs用户文档 "
"<https://docs.readthedocs.io/>`_ 。"

msgid ""
"If you are copying this code in order to get started with your "
"documentation, you need to:"
msgstr "如果你是为了开始编写文档而复制这段代码，你需要："

msgid ""
"place your ``docs/`` folder alongside your Python project. If you are "
"starting a new project, you can adapt the `pyproject.toml` example "
"configuration."
msgstr ""
"将你的 ``docs/`` 文件夹放在你的Python项目旁边。如果你正在开始一个新的项目，你可以根据 `pyproject.toml` "
"示例配置进行调整。"

msgid ""
"use your existing project repository or create a new repository on Github, "
"GitLab, Bitbucket or another host supported by Read the Docs"
msgstr "使用您现有的项目仓库或在Github、GitLab、Bitbucket或其他受Read the Docs支持的托管平台上创建一个新的仓库。"

msgid "copy ``.readthedocs.yaml`` and the ``docs/`` folder into your project."
msgstr "将 ``.readthedocs.yaml`` 和 ``docs/`` 文件夹复制到你的项目中。"

msgid "customize all the files, replacing example contents."
msgstr "自定义所有文件，替换示例内容。"

msgid ""
"add your own Python project, replacing the ``pyproject.toml`` configuration "
"and ``lumache.py`` module."
msgstr "添加你的Python项目，替换`pyproject.toml`配置和`lumache.py`模块。"

msgid "rebuild the documenation locally to see that it works."
msgstr "本地重建文档以查看是否正常工作。"

msgid ""
"*finally*, register your project on Read the Docs, see `Importing Your "
"Documentation <https://docs.readthedocs.io/en/stable/intro/import-"
"guide.html>`_."
msgstr ""
"最后，在Read the Docs上注册你的项目，参见 `导入你的文档 "
"<https://docs.readthedocs.io/zh_CN/latest/intro/import-guide.html>`_ 。"

msgid "Read the Docs tutorial"
msgstr "读取文档教程"

msgid ""
"To get started with Read the Docs, you may also refer to the `Read the Docs "
"tutorial <https://docs.readthedocs.io/en/stable/tutorial/>`__. It provides a"
" full walk-through of building an example project similar to the one in this"
" repository."
msgstr ""
"要开始使用 Read the Docs，您还可以参考 `Read the Docs 教程 "
"<https://docs.readthedocs.io/zh_CN/latest/tutorial.html>`__。它提供了一个完整的教程，教你如何构建一个与本仓库中的项目类似的示例项目。"

msgid "Welcome to Lumache's documentation!"
msgstr "欢迎使用Lumache文档！"

msgid ""
"**Lumache** (/lu'make/) is a Python library for cooks and food lovers that "
"creates recipes mixing random ingredients. It pulls data from the `Open Food"
" Facts database <https://world.openfoodfacts.org/>`_ and offers a *simple* "
"and *intuitive* API."
msgstr ""
"**Lumache** (/lu'make/) 是一个用于厨师和美食爱好者的Python库，它通过随机组合食材来创建食谱。该库从 `Open Food "
"Facts 数据库 <https://world.openfoodfacts.org/>`_ 拉取数据，并提供一个简单且直观的API。"

msgid ""
"Check out the :doc:`usage` section for further information, including how to"
" :ref:`installation` the project."
msgstr "请参阅 :doc:`usage` 部分以获取更多信息，包括如何 :ref:`installation` 该项目。"

msgid "This project is under active development."
msgstr "本项目正在积极开发中。"

msgid "Contents"
msgstr "目录"
